stage: stg

network: preprod

domain: stg.cf-explorer-preprod.eu-west-1.metadata.dev.cf-deployments.org

cf-explorer-infra:
  enabled: true
  postgresql:
    dbSize: 450Gi
#    nodeSelector:
#      node.kubernetes.io/role: resync-pg
#    tolerations:
#      - key: role
#        value: resync-pg
#        operator: Equal
#        effect: PreferNoSchedule

cf-ledger-sync:
  enabled: true
  values:
    git:
      targetRevision: "infra-develop-1_7_0"
    localCardanoNode:
      enabled: true
      volumeSize: 20Gi
      network: "preprod"
    indexer:
      enabled: true
      replicaCount: 0
      image:
        tag: "0.1.0"
      postgres:
        secretName: postgres-secrets-local
    aggregation:
      enabled: true
      replicaCount: 0
      image:
        tag: "0.1.0"
      postgres:
        secretName: postgres-secrets-local
        dbSchema: preprod
      store:
        account:
          history_cleanup_enabled: "false"
        executor:
          enable_parallel_processing: "true"


cf-explorer:
  enabled: true
  values:
    ingressDomains:
      - name: cloudfront
        domain: stg.cf-explorer-preprod.metadata.dev.cf-deployments.org
      - name: global-lb
        domain: stg.cf-explorer-preprod.global.metadata.dev.cf-deployments.org
      - name: eu-west-1-lb
        domain: stg.cf-explorer-preprod.eu-west-1.metadata.dev.cf-deployments.org
    explorerApi:
      enabled: true
      replicas: 1
      image:
        tag: "1.3.0-PR1310-de128b6-10295491786"
      tokenLogoEndpoint: https://stg-cf-explorer-token-logos.s3.eu-west-1.amazonaws.com/
    explorerRewardsApi:
      enabled: true
      replicas: 1
      image:
        tag: "1.3.0-PR103-0cd6aab-9754219477"
    explorerAuthentication:
      enabled: true
      replicas: 1
      image:
        tag: "0.9.0-PR132-394f1ba-9743398271"
    explorerFrontEnd:
      enabled: true
      image:
        tag: "1.6.0-PR-f71b692-10285504534"
      reactAppSanchonetAppUrl: "https://stg.cf-explorer-sanchonet.eu-west-1.metadata.dev.cf-deployments.org"
      reactAppPreProdAppUrl: "https://stg.cf-explorer-preprod.metadata.dev.cf-deployments.org"
      reactAppPreviewAppUrl: "https://stg.cf-explorer-preview.metadata.dev.cf-deployments.org"
      reactAppMainnetAppUrl: "https://stg.cf-explorer-mainnet.metadata.dev.cf-deployments.org"
      reactAppAuthUrl: "https://auth-api.stg.cf-explorer-preprod.eu-west-1.metadata.dev.cf-deployments.org/api/v1"
    crawler:
      enabled: false
    consumer:
      enabled: false
    consumerSchedules:
      enabled: true
      replicas: 0
      image:
        tag: "1.3.0-PR517-8d4bff0-10264448294"
      tokenLogoEndpoint: https://stg-cf-explorer-token-logos.s3.eu-west-1.amazonaws.com/
    keycloak:
      enabled: true
      image:
        tag: 0.1.15-SNAPSHOT
      setupImage:
        tag: 0.1.15-SNAPSHOT
      hostname: keycloak.stg.cf-explorer-preprod.global.metadata.dev.cf-deployments.org
      frontendDomainPublicUrl: https://stg.cf-explorer-preprod.metadata.dev.cf-deployments.org
      webOrigin: https://stg.cf-explorer-preprod.metadata.dev.cf-deployments.org
      redirectUri: https://stg.cf-explorer-preprod.metadata.dev.cf-deployments.org/*
      forwardEventUrl: https://stg.cf-explorer-preprod.metadata.dev.cf-deployments.org/api/v1/user/role-mapping

# Ada Handle Parameters
adahandle-resolver:
  enabled: true
  values:
    springProfiles: preprod,postgres
    image:
      tag: "0.1.3"

kube-prometheus-stack:
  enabled: true
  version: 58.0.0

argo-cd:
  server:
    ingress:
      hosts:
        - argocd.stg.cf-explorer-preprod.metadata.dev.cf-deployments.org
