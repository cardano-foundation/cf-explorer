stage: stg

network: mainnet

domain: stg.cf-explorer-mainnet.eu-west-1.metadata.dev.cf-deployments.org

cf-explorer-infra:
  enabled: false

cf-ledger-sync:
  enabled: true
  values:
    git:
      targetRevision: "chore/add-new-aggregation-app"
    image:
      repository: "pro.registry.gitlab.metadata.dev.cf-deployments.org/base-infrastructure/docker-registry/cf-ledger-sync"
      tag: "7b05530-8279271870"
    ingress:
      enabled: false
    useLocalCardanoNode: true
    storeCardanoHost: backbone.cardano.iog.io
    storeCardanoPort: 3001
    storeCardanoProtocolMagic: "764824073"
    localCardanoNode:
      enabled: true
      network: "mainnet"
    aggregation:
      image:
        repository: "pro.registry.gitlab.metadata.dev.cf-deployments.org/base-infrastructure/docker-registry/cf-ledger-sync-aggregation"
        tag: "7b05530-8279271870"
      store:
        account:
          history_cleanup_enabled: "false"

cf-explorer:
  enabled: true
  values:
    ingressDomains:
      - name: cloudfront
        domain: stg.cf-explorer-mainnet.metadata.dev.cf-deployments.org
      - name: global-lb
        domain: stg.cf-explorer-mainnet.global.metadata.dev.cf-deployments.org
      - name: eu-west-1-lb
        domain: stg.cf-explorer-mainnet.eu-west-1.metadata.dev.cf-deployments.org
    crawler:
      enabled: false
    consumer:
      enabled: false
    explorerApi:
      enabled: true
      postgres:
        secret:
          hostKey: POSTGRES_READ_ONLY_HOST
      image:
        tag: "0.8.0-PR1038-f74b963-8135114438"
      redis:
        mode: managed-standalone
        standalone:
          useSsl: "true"
      kafka:
        useSsl: "true"
        bootstrapServersSecret:
          name: infra-secrets
      tokenLogoEndpoint: https://stg-cf-explorer-token-logos.s3.eu-west-1.amazonaws.com/
    explorerRewardsApi:
      enabled: true
      image:
        tag: "0.1.8-SNAPSHOT-PR93-1299c79-7912678888"
    explorerAuthentication:
      enabled: true
      replicas: 1
      image:
        tag: "0.5.0-SNAPSHOT-sanchonet-PR123"
      redis:
        mode: managed-standalone
        standalone:
          useSsl: "true"
      keycloakServerUrl: "https://keycloak.stg.cf-explorer-mainnet.eu-west-1.metadata.dev.cf-deployments.org"
    explorerFrontEnd:
      enabled: true
      image:
        tag: "1.0.0-PR3105-fd55648-8247466176"
      reactAppSanchonetAppUrl: "https://stg.cf-explorer-sanchonet.eu-west-1.metadata.dev.cf-deployments.org"
      reactAppPreProdAppUrl: "https://stg.cf-explorer-preprod.metadata.dev.cf-deployments.org"
      reactAppPreviewAppUrl: "https://stg.cf-explorer-preview.metadata.dev.cf-deployments.org"
      reactAppMainnetAppUrl: "https://stg.cf-explorer-mainnet.metadata.dev.cf-deployments.org"
      reactAppAuthUrl: "https://auth-api.stg.cf-explorer-mainnet.eu-west-1.metadata.dev.cf-deployments.org/api/v1"
    consumerSchedules:
      enabled: true
      image:
        tag: "0.9.0-PR318-4932450-8235150499"
      redis:
        mode: managed-standalone
        standalone:
          useSsl: "true"
      kafka:
        useSsl: "true"
        bootstrapServersSecret:
          name: infra-secrets
      tokenLogoEndpoint: https://stg-cf-explorer-token-logos.s3.eu-west-1.amazonaws.com/
    keycloak:
      enabled: true
      image:
        tag: 0.1.15-SNAPSHOT
      setupImage:
        tag: 0.1.15-SNAPSHOT
      hostname: keycloak.stg.cf-explorer-mainnet.eu-west-1.metadata.dev.cf-deployments.org
      frontendDomainPublicUrl: https://stg.cf-explorer-mainnet.metadata.dev.cf-deployments.org
      webOrigin: https://stg.cf-explorer-mainnet.metadata.dev.cf-deployments.org
      redirectUri: https://stg.cf-explorer-mainnet.metadata.dev.cf-deployments.org/*
      forwardEventUrl: https://stg.cf-explorer-mainnet.metadata.dev.cf-deployments.org/api/v1/user/role-mapping

# Ada Handle Parameters
adahandle-resolver:
  enabled: true
  values:
    springProfiles: mainnet,postgres
    image:
      tag: "0.1.3"

argo-cd:
  server:
    ingress:
      hosts:
        - argocd.stg.cf-explorer-mainnet.metadata.dev.cf-deployments.org
