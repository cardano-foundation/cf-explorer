---
# Source: cf-explorer/templates/consumer-schedules-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: cf-ledger-consumer-schedules
  labels:
    app: cf-ledger-consumer-schedules
spec:
  selector:
    app: cf-ledger-consumer-schedules
  ports:
    - protocol: TCP
      name: api
      port: 8080
      targetPort: api
---
# Source: cf-explorer/templates/consumer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: cf-ledger-consumer
  labels:
    app: cf-ledger-consumer
spec:
  selector:
    app: cf-ledger-consumer
  ports:
    - protocol: TCP
      name: api
      port: 8080
      targetPort: api
---
# Source: cf-explorer/templates/crawler-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: cf-ledger-crawler
  labels:
    app: cf-ledger-crawler
spec:
  selector:
    app: cf-ledger-crawler
  ports:
    - protocol: TCP
      name: api
      port: 8080
      targetPort: api
---
# Source: cf-explorer/templates/explorer-api-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: cf-explorer-api
  labels:
    app: cf-explorer-api
spec:
  selector:
    app: cf-explorer-api
  ports:
    - protocol: TCP
      name: api
      port: 8080
      targetPort: api
  type: ClusterIP
---
# Source: cf-explorer/templates/explorer-authentication-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: cf-explorer-authentication
  labels:
    app: cf-explorer-authentication
spec:
  selector:
    app: cf-explorer-authentication
  ports:
    - protocol: TCP
      name: api
      port: 8080
      targetPort: api
  type: ClusterIP
---
# Source: cf-explorer/templates/explorer-fe-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: cf-explorer-fe
  labels:
    app: cf-explorer-fe
spec:
  selector:
    app: cf-explorer-fe
  ports:
    - protocol: TCP
      name: api
      port: 1102
      targetPort: api
  type: ClusterIP
---
# Source: cf-explorer/templates/explorer-rewards-api-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: cf-explorer-rewards-api
  labels:
    app: cf-explorer-rewards-api
spec:
  selector:
    app: cf-explorer-rewards-api
  ports:
    - protocol: TCP
      name: api
      port: 8080
      targetPort: api
  type: ClusterIP
---
# Source: cf-explorer/templates/explorer-db-dump.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cf-ledger-consumer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cf-ledger-consumer
  template:
    metadata:
      labels:
        app: cf-ledger-consumer
    spec:
      containers:
        - name: cf-ledger-consumer
          image: "pro.registry.gitlab.metadata.dev.cf-deployments.org/base-infrastructure/docker-registry/cf-ledger-consumer:0.2.13"
#          command: ["bash", "-c", "sleep 999999"]
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: dev
            - name: POSTGRES_HOST
              value: postgresql
            - name: POSTGRES_PORT
              value: "5432"
            - name: POSTGRES_USER
              value: cardano-master
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: infra-secrets
                  key: postgres-user-password
            - name: POSTGRES_DB
              value: explorer_api
            - name: SCHEMA
              value: mainnet

            - name: FLYWAY_ENABLE
              value: "true"
            - name: FLYWAY_VALIDATE
              value: "true"

            - name: BOOSTRAP_SERVER_HOST
              value: kafka-explorer
            - name: BOOSTRAP_SERVER_PORT
              value: "9092"

            - name: BLOCKS_TOPIC
              value: local.crawler.blocks

            - name: MAXIMUM_POOL_SIZE
              value: "64"
            - name: JDBC_BATCH_SIZE
              value: "500"
            - name: BLOCKS_BATCH_SIZE
              value: "1000"
            - name: LOG
              value: debug

            - name: FILE_GENESIS_PATH
              value: /genesis/
            - name: FILE_GENESIS
              value: "mainnet.genesis.json"
            - name: NETWORK
              value: "764824073"

          ports:
            - name: api
              containerPort: 8080
          imagePullPolicy: Always
      imagePullSecrets:
        - name: regcred
  revisionHistoryLimit: 2
---
# Source: cf-explorer/templates/consumer-schedules-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cf-ledger-consumer-schedules
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cf-ledger-consumer-schedules
  template:
    metadata:
      labels:
        app: cf-ledger-consumer-schedules
    spec:
      containers:
        - name: cf-ledger-consumer-schedules
          image: "pro.registry.gitlab.metadata.dev.cf-deployments.org/base-infrastructure/docker-registry/cf-ledger-consumer-schedules:0.2.2"

          env:
            - name: SPRING_PROFILES_ACTIVE
              value: dev
            - name: SERVER_PORT
              value: "8080"

            - name: POSTGRES_HOST
              value: postgresql
            - name: POSTGRES_PORT
              value: "5432"
            - name: POSTGRES_USER
              value: cardano-master
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: infra-secrets
                  key: postgres-user-password
            - name: POSTGRES_DB
              value: explorer_api
            - name: POSTGRES_SCHEMA
              value: mainnet

            - name: MAXIMUM_POOL_SIZE
              value: "48"
            - name: META_DATA_JOB_ENABLED
              value: "true"
            - name: REPORT_HISTORY_JOB_ENABLED
              value: "true"
            - name: EXPIRED_REPORTS_RATE
              value: "604800000"

            - name: POOL_OFFLINE_DATA_JOB_ENABLED
              value: "true"
            - name: CRAWL_POOL_DATA_DELAY
              value: "172800000"
            - name: INSERT_POOL_DATA_DELAY
              value: "180000"
            - name: TOKEN_METDATA_URL
              value: https://github.com/cardano-foundation/cardano-token-registry.git
            - name: TOKEN_METADATA_FOLDER
              value: "/mappings"
            - name: NETWORK
              value: mainnet

            - name: KAFKA_BOOSTRAP_SERVER_URL
              value: kafka-explorer:9092
            - name: KAFKA_GROUP_ID
              value: mainnet
            - name: KAFKA_REPORTS_TOPIC
              value: dev.explorer.api.reports

            - name: API_CHECK_REWARD_URL
              value: http://cf-explorer-api/api/v1/rewards/fetch

            - name: S3_BUCKET_NAME
              value: cf-dev-explorer-monolith-reports
            - name: S3_REGION
              value: eu-west-1
            - name: S3_STORAGE_ENDPOINT
              value: https://s3-eu-west-1.amazonaws.com
            - name: S3_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: infra-secrets
                  key: access-key
            - name: S3_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: infra-secrets
                  key: secret-key


          ports:
            - name: api
              containerPort: 8080

      imagePullSecrets:
        - name: regcred
  revisionHistoryLimit: 2
---
# Source: cf-explorer/templates/crawler-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cf-ledger-crawler
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cf-ledger-crawler
  template:
    metadata:
      labels:
        app: cf-ledger-crawler
    spec:
      containers:
        - name: cf-ledger-crawler
          image: "pro.registry.gitlab.metadata.dev.cf-deployments.org/base-infrastructure/docker-registry/cf-ledger-crawler:0.2.6"
#          command: ["bash", "-c", "sleep 999999"]
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: n2n,standalone,kafka

            - name: PORT
              value: "8080"
            - name: BOOTSTRAP_SERVER
              value: kafka-explorer:9092
            - name: REDIS_STANDALONE_HOST
              value: redis-headless
            - name: REDIS_STANDALONE_PORT
              value: "6379"
            - name: REDIS_STANDALONE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: infra-secrets
                  key: redis

            - name: CRAWLER_NAME
              value: dev-crawler
            - name: BLOCKS_TOPIC
              value: local.crawler.blocks
            - name: BLOCKS_ROLLBACK_TOPIC
              value: local.crawler.rollback-blocks

            - name: NODE_ADDRESS
              value: relays-new.cardano-mainnet.iohk.io
            - name: NODE_PORT
              value: "3001"
            - name: NETWORK_MAGIC
              value: "764824073"

          ports:
            - name: api
              containerPort: 8080
          imagePullPolicy: Always
      imagePullSecrets:
        - name: regcred
  revisionHistoryLimit: 2
---
# Source: cf-explorer/templates/explorer-api-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cf-explorer-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cf-explorer-api
  template:
    metadata:
      labels:
        app: cf-explorer-api
    spec:
      containers:
        - name: cf-explorer-api
          image: "pro.registry.gitlab.metadata.dev.cf-deployments.org/base-infrastructure/docker-registry/cf-explorer-api:0.3.9"
#          command: ["bash", "-c", "sleep 999999"]
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: dev, standalone
            - name: HOST
              value: postgresql
            - name: PORT_DB
              value: "5432"
            - name: USERNAME_DB
              value: cardano-master
            - name: PASSWORD_DB
              valueFrom:
                secretKeyRef:
                  name: infra-secrets
                  key: postgres-user-password
            - name: DB
              value: explorer_api
            - name: SCHEMA
              value: 

            - name: API_CHECK_REWARD_URL
              value: "http://cf-explorer-rewards-api/api/v1/rewards/fetch"
            - name: API_CHECK_POOL_HISTORY_URL
              value: "http://cf-explorer-rewards-api/api/v1/pool-history/fetch"
            - name: API_CHECK_POOL_INFO_URL
              value: "http://cf-explorer-rewards-api/api/v1/pool-info/fetch"
            - name: API_CHECK_EPOCH_STAKE_URL
              value: "http://cf-explorer-rewards-api/api/v1/epoch-stake/fetch"
            - name: REDIS_STANDALONE_HOST
              value: redis-headless
            - name: REDIS_STANDALONE_PORT
              value: "6379"
            - name: REDIS_STANDALONE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: infra-secrets
                  key: redis
            - name: S3_BUCKET_NAME
              value: cf-dev-explorer-monolith-reports
            - name: S3_REGION
              value: eu-west-1
            - name: STORAGE_ENDPOINT
              value: https://s3-eu-west-1.amazonaws.com
            - name: S3_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: infra-secrets
                  key: access-key
            - name: S3_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: infra-secrets
                  key: secret-key

          ports:
            - name: api
              containerPort: 8080
          imagePullPolicy: Always
      imagePullSecrets:
        - name: regcred
  revisionHistoryLimit: 2
---
# Source: cf-explorer/templates/explorer-authentication-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cf-explorer-authentication
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cf-explorer-authentication
  template:
    metadata:
      labels:
        app: cf-explorer-authentication
    spec:
      containers:
        - name: cf-explorer-authentication
          image: "pro.registry.gitlab.metadata.dev.cf-deployments.org/base-infrastructure/docker-registry/cf-explorer-authentication:v0.1.1-7-g2e0c779"
#          command: ["bash", "-c", "sleep 999999"]
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: dev, standalone
            - name: DB_HOST
              value: postgresql
            - name: DB_PORT
              value: "5432"
            - name: DB_USERNAME
              value: cardano-master
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: infra-secrets
                  key: postgres-user-password
            - name: DB_NAME
              value: explorer_api
            - name: DB_SCHEMA
              value: 
            - name: REDIS_STANDALONE_HOST
              value: redis-headless
            - name: REDIS_STANDALONE_PORT
              value: "6379"
            - name: REDIS_STANDALONE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: infra-secrets
                  key: redis

            - name: FLYWAY_ENABLED
              value: "true"
            - name: SWAGGER_CLIENT_URL
              value: https://
            - name: SWAGGER_SERVER_URL
              value: http://localhost:8021

          ports:
            - name: api
              containerPort: 8080
          imagePullPolicy: Always
      imagePullSecrets:
        - name: regcred
  revisionHistoryLimit: 2
---
# Source: cf-explorer/templates/explorer-fe-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cf-explorer-fe
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cf-explorer-fe
  template:
    metadata:
      labels:
        app: cf-explorer-fe
    spec:
      containers:
        - name: cf-explorer-fe
          image: "pro.registry.gitlab.metadata.dev.cf-deployments.org/base-infrastructure/docker-registry/cf-explorer-frontend:0.3.2"
#          command: ["bash", "-c", "sleep 999999"]
          env:
            - name: DANGEROUSLY_DISABLE_HOST_CHECK
              value: "true"
            - name: HOST
              value: "0.0.0.0"
            - name: PORT
              value: "1102"

            - name: REACT_APP_API_URL
              value: https://api./api/v1
            - name: REACT_APP_PREPROD_API_URL
              value: https://api./api/v1
            - name: REACT_APP_PREVIEW_API_URL
              value: 
            - name: REACT_APP_TESTNET_API_URL
              value: 
            - name: REACT_APP_MAINNET_API_URL
              value: https://api./api/v1
            - name: REACT_APP_AUTH_API_URL
              value: https://auth-api./api/v1

          ports:
            - name: api
              containerPort: 1102
          imagePullPolicy: Always
      imagePullSecrets:
        - name: regcred
  revisionHistoryLimit: 2
---
# Source: cf-explorer/templates/explorer-rewards-api-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cf-explorer-rewards-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cf-explorer-rewards-api
  template:
    metadata:
      labels:
        app: cf-explorer-rewards-api
    spec:
      containers:
        - name: cf-explorer-rewards-api
          image: "pro.registry.gitlab.metadata.dev.cf-deployments.org/base-infrastructure/docker-registry/cf-explorer-rewards:0.1.1-SNAPSHOT"
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: local
            - name: SERVER_PORT
              value: "8080"

            - name: POSTGRES_HOST
              value: postgresql
            - name: POSTGRES_PORT
              value: "5432"
            - name: POSTGRES_USER
              value: cardano-master
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: infra-secrets
                  key: postgres-user-password
            - name: POSTGRES_DB
              value: explorer_api
            - name: POSTGRES_SCHEMA
              value: default

            - name: NETWORK
              value: mainnet

            - name: LIST_SIZE_EACH_THREAD
              value: "5"
            - name: POOL_MAX_SIZE
              value: "12"
            - name: POOL_CORE_SIZE
              value: "10"
            - name: FLYWAY_ENABLE
              value: "false"
            - name: FLYWAY_VALIDATE
              value: "false"

            - name: REWARD_PARALLEL_SAVING_ENABLED
              value: "true"
            - name: REWARD_SUB_LIST_SIZE
              value: "500"
            - name: REWARD_PARALLEL_SAVING_THREAD_NUM
              value: "10"

            - name: EPOCH_STAKE_PARALLEL_SAVING_ENABLED
              value: "true"
            - name: EPOCH_STAKE_SUB_LIST_SIZE
              value: "500"
            - name: EPOCH_STAKE_PARALLEL_SAVING_THREAD_NUM
              value: "10"

          ports:
            - name: api
              containerPort: 8080
          imagePullPolicy: Always
      imagePullSecrets:
        - name: regcred
  revisionHistoryLimit: 2
---
# Source: cf-explorer/templates/explorer-api-ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: cf-explorer-api
spec:
  rules:
    - host: api.
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: cf-explorer-api
                port:
                  number: 8080
  tls:
    - hosts:
        - api.
---
# Source: cf-explorer/templates/explorer-authentication-ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: cf-explorer-authentication
spec:
  rules:
    - host: auth-api.
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: cf-explorer-authentication
                port:
                  number: 8080
  tls:
    - hosts:
        - api.
---
# Source: cf-explorer/templates/explorer-fe-ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: cf-explorer-fe
spec:
  rules:
    - host: 
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: cf-explorer-fe
                port:
                  number: 1102
  tls:
    - hosts:
        -
---
# Source: cf-explorer/templates/explorer-rewards-api-ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: cf-explorer-rewards-api
spec:
  rules:
    - host: rewards-api.
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: cf-explorer-rewards-api
                port:
                  number: 8080
  tls:
    - hosts:
        - api.
