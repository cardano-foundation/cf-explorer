{{ with .Values.consumer }}
{{ if .enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cf-ledger-consumer
spec:
  replicas: {{ .replicas }}
  selector:
    matchLabels:
      app: cf-ledger-consumer
  template:
    metadata:
      labels:
        app: cf-ledger-consumer
    spec:
      containers:
        - name: cf-ledger-consumer
          image: "{{ .image.repository }}:{{ .image.tag }}"
#          command: ["bash", "-c", "sleep 999999"]
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: {{ .springProfiles }}

            - name: POSTGRES_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ .postgres.secret.name }}
                  key: {{ .postgres.secret.hostKey }}
            - name: POSTGRES_PORT
              valueFrom:
                secretKeyRef:
                  name: {{ .postgres.secret.name }}
                  key: {{ .postgres.secret.portKey }}
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .postgres.secret.name }}
                  key: {{ .postgres.secret.userKey }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .postgres.secret.name }}
                  key: {{ .postgres.secret.passwordKey }}
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: {{ .postgres.secret.name }}
                  key: {{ .postgres.secret.dbKey }}
            - name: SCHEMA
              value: {{ .postgres.schema }}

            {{- if eq .redis.mode "sentinel" }}
            - name: REDIS_MASTER_NAME
              value: {{ .redis.master.name }}
            - name: REDIS_SENTINEL_HOST
              value: {{ .redis.sentinel.host }}
            - name: REDIS_SENTINEL_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ .redis.secret.name }}
                  key: {{ .redis.secret.key }}
            {{- else if eq .redis.mode "cluster" }}
            - name: REDIS_CLUSTER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .redis.cluster.secret.name }}
                  key: {{ .redis.cluster.secret.passwordKey }}
            - name: REDIS_NODE_ADDRESSES
              valueFrom:
                secretKeyRef:
                  name: {{ .redis.cluster.secret.name }}
                  key: {{ .redis.cluster.secret.endpointKey }}
            {{- else if eq .redis.mode "elasticache" }}
            - name: REDIS_STANDALONE_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ .redis.secret.name }}
                  key: REDIS_ENDPOINT
            - name: REDIS_STANDALONE_PORT
              value: "6379"
            - name: REDIS_STANDALONE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .redis.secret.name }}
                  key: {{ .redis.secret.key }}
            {{- else }}
            - name: REDIS_STANDALONE_HOST
              value: {{ .redis.standalone.host }}
            - name: REDIS_STANDALONE_PORT
              value: {{ .redis.standalone.port | quote }}
            - name: REDIS_STANDALONE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .redis.secret.name }}
                  key: {{ .redis.secret.key }}
            {{- end }}

            - name: JPA_SHOW_SQL
              value: {{ .jpa.showSql | default false | quote}}
            - name: FLYWAY_ENABLE
              value: "true"
            - name: FLYWAY_VALIDATE
              value: "false"

            - name: BOOTSTRAP_SERVERS
              valueFrom:
                secretKeyRef:
                  name: {{ .kafka.bootstrapServersSecret.name }}
                  key: {{ .kafka.bootstrapServersSecret.key }}
            - name: KAFKA_USE_SSL
              value: {{ .kafka.useSsl | default "false" | quote }}

            - name: BLOCKS_TOPIC
              value: {{ .crawler.blocks.topic }}

            - name: MAXIMUM_POOL_SIZE
              value: {{ .maximumPoolSize | quote }}
            - name: JDBC_BATCH_SIZE
              value: {{ .jdbcBatchSize | quote }}
            - name: BLOCKS_BATCH_SIZE
              value: {{ .blocksBatchSize | quote }}
            - name: LOG
              value: {{ .logLevel }}

            - name: SUBMIT_API_CONFIG_URL
              value: "/genesis/{{ .network }}/submit-api-config.json"
            - name: BYRON_GENESIS_URL
              value: "/genesis/{{ .network }}/byron-genesis.json"
            - name: SHELLEY_GENESIS_URL
              value: "/genesis/{{ .network }}/shelley-genesis.json"
            - name: ALONZO_GENESIS_URL
              value: "/genesis/{{ .network }}/alonzo-genesis.json"
            - name: CONWAY_GENESIS_URL
              value: "/genesis/{{ .network }}/conway-genesis.json"

            # To be deprecated
            - name: FILE_GENESIS_PATH
              value: /genesis/
            # To be deprecated
            - name: FILE_GENESIS
              value: "{{ .network }}.genesis.json"
            - name: NETWORK
              value: {{ .networkMagic | quote }}

          ports:
            - name: api
              containerPort: {{ .port }}
          imagePullPolicy: Always
      imagePullSecrets:
        - name: regcred
  revisionHistoryLimit: 2
{{ end }}
{{ end }}
