{{ with .Values.explorerApi }}
{{ if .enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cf-explorer-api
spec:
  replicas: {{ .replicas }}
  selector:
    matchLabels:
      app: cf-explorer-api
  template:
    metadata:
      labels:
        app: cf-explorer-api
    spec:
      containers:
        - name: cf-explorer-api
          image: "{{ .image.repository }}:{{ .image.tag }}"
#          command: ["bash", "-c", "sleep 999999"]
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: {{ .springProfiles }}

            - name: HOST
              valueFrom:
                secretKeyRef:
                  name: {{ .postgres.secret.name }}
                  key: {{ .postgres.secret.hostKey }}
            - name: PORT_DB
              valueFrom:
                secretKeyRef:
                  name: {{ .postgres.secret.name }}
                  key: {{ .postgres.secret.portKey }}
            - name: USERNAME_DB
              valueFrom:
                secretKeyRef:
                  name: {{ .postgres.secret.name }}
                  key: {{ .postgres.secret.userKey }}
            - name: PASSWORD_DB
              valueFrom:
                secretKeyRef:
                  name: {{ .postgres.secret.name }}
                  key: {{ .postgres.secret.passwordKey }}
            - name: DB
              valueFrom:
                secretKeyRef:
                  name: {{ .postgres.secret.name }}
                  key: {{ .postgres.secret.dbKey }}
            - name: SCHEMA
              value: {{ .postgres.schema }}

            - name: API_CHECK_REWARD_URL
              value: "{{ .explorerRewardsUrl }}/api/v1/rewards/fetch"
            - name: API_CHECK_POOL_HISTORY_URL
              value: "{{ .explorerRewardsUrl }}/api/v1/pool-history/fetch"
            - name: API_CHECK_POOL_INFO_URL
              value: "{{ .explorerRewardsUrl }}/api/v1/pool-info/fetch"
            - name: API_CHECK_EPOCH_STAKE_URL
              value: "{{ .explorerRewardsUrl }}/api/v1/epoch-stake/fetch"
            - name: API_CHECK_ADA_POTS_URL
              value: "{{ .explorerRewardsUrl }}/api/v1/ada-pots/fetch"

            - name: API_NEWS_URL
              value: "http://cardano-news-api"

            {{- if eq .redis.mode "sentinel" }}
            - name: REDIS_MASTER_NAME
              value: {{ .redis.master.name }}
            - name: REDIS_SENTINEL_HOST
              value: {{ .redis.sentinel.host }}
            - name: REDIS_SENTINEL_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ .redis.secret.name }}
                  key: {{ .redis.secret.key }}
            {{- else if eq .redis.mode "cluster" }}
            - name: REDIS_CLUSTER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .redis.cluster.secret.name }}
                  key: {{ .redis.cluster.secret.passwordKey }}
            - name: NODE_ADDRESSES
              valueFrom:
                secretKeyRef:
                  name: {{ .redis.cluster.secret.name }}
                  key: {{ .redis.cluster.secret.endpointKey }}
            {{- else }}
            - name: REDIS_STANDALONE_HOST
              value: {{ .redis.standalone.host }}
            - name: REDIS_STANDALONE_PORT
              value: {{ .redis.standalone.port | quote }}
            - name: REDIS_STANDALONE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .redis.secret.name }}
                  key: {{ .redis.secret.key }}
            {{- end }}
            - name: S3_BUCKET_NAME
              valueFrom:
                secretKeyRef:
                  name: {{ .s3.secret.name }}
                  key: {{ .s3.secret.bucketNameKey }}
            - name: S3_REGION
              valueFrom:
                secretKeyRef:
                  name: {{ .s3.secret.name }}
                  key: {{ .s3.secret.regionKey }}
            - name: STORAGE_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: {{ .s3.secret.name }}
                  key: {{ .s3.secret.endpointKey }}
            - name: S3_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .s3.secret.name }}
                  key: {{ .s3.secret.accessKeyKey }}
            - name: S3_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .s3.secret.name }}
                  key: {{ .s3.secret.secretKeyKey }}

          ports:
            - name: api
              containerPort: {{ .port }}
          imagePullPolicy: Always
      imagePullSecrets:
        - name: regcred
  revisionHistoryLimit: 2
{{ end }}
{{ end }}
