{{ with .Values.explorerApi }}
{{ if .enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cf-explorer-api
spec:
  replicas: {{ .replicas }}
  selector:
    matchLabels:
      app: cf-explorer-api
  template:
    metadata:
      labels:
        app: cf-explorer-api
    spec:
      containers:
        - name: cf-explorer-api
          image: "{{ .image.repository }}:{{ .image.tag }}"
#          command: ["bash", "-c", "sleep 999999"]
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: {{ .springProfiles }}

            - name: LEDGER_SYNC_HOST
              value: pro-cf-explorer-mainnet-2.cwx7lb7dlb4g.eu-west-1.rds.amazonaws.com
            - name: LEDGER_SYNC_PORT
              valueFrom:
                secretKeyRef:
                  name: {{ .postgres.ledgerSync.secret.name }}
                  key: {{ .postgres.ledgerSync.secret.portKey }}
            - name: LEDGER_SYNC_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .postgres.ledgerSync.secret.name }}
                  key: {{ .postgres.ledgerSync.secret.userKey }}
            - name: LEDGER_SYNC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .postgres.ledgerSync.secret.name }}
                  key: {{ .postgres.ledgerSync.secret.passwordKey }}
            - name: LEDGER_SYNC_DB
              valueFrom:
                secretKeyRef:
                  name: {{ .postgres.ledgerSync.secret.name }}
                  key: {{ .postgres.ledgerSync.secret.dbKey }}

            - name: EXPLORER_HOST
              value: pro-cf-explorer-mainnet-2.cwx7lb7dlb4g.eu-west-1.rds.amazonaws.com
            - name: EXPLORER_PORT
              valueFrom:
                secretKeyRef:
                  name: {{ .postgres.explorer.secret.name }}
                  key: {{ .postgres.explorer.secret.portKey }}
            - name: EXPLORER_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .postgres.explorer.secret.name }}
                  key: {{ .postgres.explorer.secret.userKey }}
            - name: EXPLORER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .postgres.explorer.secret.name }}
                  key: {{ .postgres.explorer.secret.passwordKey }}
            - name: EXPLORER_DB
              valueFrom:
                secretKeyRef:
                  name: {{ .postgres.explorer.secret.name }}
                  key: {{ .postgres.explorer.secret.dbKey }}


            - name: DB_SCHEMA
              value: {{ .postgres.schema }}

            - name: KAFKA_BOOTSTRAP_SERVER
              valueFrom:
                secretKeyRef:
                  name: {{ .kafka.bootstrapServersSecret.name }}
                  key: {{ .kafka.bootstrapServersSecret.key }}
            - name: KAFKA_USE_SSL
              value: {{ .kafka.useSsl | default "false" | quote }}
            - name: KAFKA_REPORTS_TOPIC
              value: {{ .kafka.reportsTopic }}

            - name: AUTH_FILE_PATH
              value: {{ .authFilePath | default "/app/permission/policy.json" | quote }}
            - name: RSA_PUBLIC_KEY_AUTH
              valueFrom:
                secretKeyRef:
                  name: infra-secrets
                  key: RSA_PUBLIC_KEY_AUTH

            - name: API_CHECK_REWARD_URL
              value: "{{ .explorerRewardsUrl }}/api/v1/rewards/fetch"
            - name: API_CHECK_POOL_HISTORY_URL
              value: "{{ .explorerRewardsUrl }}/api/v1/pool-history/fetch"
            - name: API_CHECK_POOL_INFO_URL
              value: "{{ .explorerRewardsUrl }}/api/v1/pool-info/fetch"
            - name: API_CHECK_EPOCH_STAKE_URL
              value: "{{ .explorerRewardsUrl }}/api/v1/epoch-stake/fetch"
            - name: API_CHECK_ADA_POTS_URL
              value: "{{ .explorerRewardsUrl }}/api/v1/ada-pots/fetch"
            - name: API_CHECK_EPOCH_URL
              value: "{{ .explorerRewardsUrl }}/api/v1/epochs/fetch"

            - name: API_NEWS_URL
              value: "http://cardano-news-api?limit=%d&offset=%d"
            - name: API_NEWS_CACHE_TIME
              value: "120"

            - name: API_MARKET_URL
              value: "https://api.coingecko.com/api/v3/coins/markets?ids=cardano&vs_currency=%s"
            - name: API_MARKET_CACHE_TIME
              value: "180"
            - name: REPORT_LIMIT_PER_24HOURS
              value: {{ .reportLimitPer24h | default "2" | quote }}
            - name: EPOCH_DAYS
              value: {{ .epochDays | default 5 | quote }}

            - name: API_BOLNISI_OFFCHAIN_URL
              value: {{ .apiBolnisiOffchainUrl | default "https://offchain.pro.cf-bolnisi-mainnet.eu-west-1.bnwa.metadata.dev.cf-deployments.org/api/v1/storage/objectUrl/georgian-wine/{cid}" | quote }}
            - name: API_BOLNISI_PUBLIC_KEY_URL
              value: {{ .apiBolnisiPublicKeyUrl | default "https://api.pro.cf-bolnisi-mainnet.eu-west-1.bnwa.metadata.dev.cf-deployments.org/api/v1/pubkeys/{wineryId}/v/0" | quote }}

            {{- if eq .redis.mode "sentinel" }}
            - name: REDIS_MASTER_NAME
              value: {{ .redis.master.name }}
            - name: REDIS_SENTINEL_HOST
              value: {{ .redis.sentinel.host }}
            - name: REDIS_SENTINEL_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ .redis.secret.name }}
                  key: {{ .redis.secret.key }}
            {{- else if eq .redis.mode "cluster" }}
            - name: REDIS_CLUSTER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .redis.cluster.secret.name }}
                  key: {{ .redis.cluster.secret.passwordKey }}
            - name: NODE_ADDRESSES
              valueFrom:
                secretKeyRef:
                  name: {{ .redis.cluster.secret.name }}
                  key: {{ .redis.cluster.secret.endpointKey }}
            {{- else if eq .redis.mode "elasticache" }}
            - name: REDIS_STANDALONE_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ .redis.secret.name }}
                  key: REDIS_ENDPOINT
            - name: REDIS_STANDALONE_PORT
              value: "6379"
            - name: REDIS_STANDALONE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .redis.secret.name }}
                  key: {{ .redis.secret.key }}
            {{- else if eq .redis.mode "managed-standalone" }}
            - name: REDIS_STANDALONE_HOST
              valueFrom:
                secretKeyRef:
                  name: redis-secrets
                  key: REDIS_HOST
            - name: REDIS_STANDALONE_PORT
              valueFrom:
                secretKeyRef:
                  name: redis-secrets
                  key: REDIS_PORT
            - name: REDIS_STANDALONE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .redis.secret.name }}
                  key: {{ .redis.secret.key }}
            - name: REDIS_USE_SSL
              value: {{ .redis.standalone.useSsl | default "false" | quote }}
            {{- else }}
            - name: REDIS_STANDALONE_HOST
              value: {{ .redis.standalone.host }}
            - name: REDIS_STANDALONE_PORT
              value: {{ .redis.standalone.port | quote }}
            - name: REDIS_STANDALONE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .redis.secret.name }}
                  key: {{ .redis.secret.key }}
            - name: REDIS_USE_SSL
              value: {{ .redis.standalone.useSsl | default "false" | quote }}
            {{- end }}

            - name: REDIS_PUBSUB_TOPIC
              value: {{ .redis.pubSubTopic | default "blocks" | quote }}

            - name: S3_BUCKET_NAME
              valueFrom:
                secretKeyRef:
                  name: {{ .s3.secret.name }}
                  key: {{ .s3.secret.bucketNameKey }}
            - name: S3_REGION
              valueFrom:
                secretKeyRef:
                  name: {{ .s3.secret.name }}
                  key: {{ .s3.secret.regionKey }}
            - name: S3_STORAGE_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: {{ .s3.secret.name }}
                  key: {{ .s3.secret.endpointKey }}
            - name: S3_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .s3.secret.name }}
                  key: {{ .s3.secret.accessKeyKey }}
            - name: S3_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .s3.secret.name }}
                  key: {{ .s3.secret.secretKeyKey }}
            - name: TOKEN_LOGO_ENDPOINT
              value: {{ .tokenLogoEndpoint }}

            - name: WEB_SOCKET_MARKET_PUBLISH_DELAY_TIME
              value: {{ .webSocketMarketPublishDelayTime | default "20000" | quote }}

            - name: BYRON_GENESIS_FILE
              value: {{ .byronGenesisFile | default "/app/genesis/{{ .network }}/byron-genesis.json" | quote }}
            - name: SHELLEY_GENESIS_FILE
              value: {{ .shelleyGenesisFile | default "/app/genesis/{{ .network }}/shelley-genesis.json" | quote }}
            - name: CONWAY_GENESIS_FILE
              value: {{ .conwayGenesisFile | default "https://book.play.dev.cardano.org/environments/sanchonet/conway-genesis.json" | quote }}

          ports:
            - name: api
              containerPort: {{ .port }}
          imagePullPolicy: Always
      imagePullSecrets:
        - name: regcred
  revisionHistoryLimit: 2
{{ end }}
{{ end }}
